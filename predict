EMPTY(EPSILON) = {EPSILON} ...
EMPTY(return_type) 
EMPTY(func_stat_list) 
EMPTY(func_stat) 
EMPTY(return_stat) 
EMPTY(ret_value) 
EMPTY(param_list) 
EMPTY(param_next) 
EMPTY(stat_list) 
EMPTY(statement) 
EMPTY(val_assigment) 
EMPTY(input_param_list) 
EMPTY(input_param_next) 
EMPTY(with_name) 


FOLLOW(return_type)     = { "{" }
FOLLOW(type)            = { "{" }
FOLLOW(condition)       = { "{" }
FOLLOW(expression)      = { "{", EOL } 
FOLLOW(statement)       = { EOL }
FOLLOW(func_stat)       = { EOL }
FOLLOW(var_assigment)   = { EOL }
FOLLOW(function)        = { EOL }
FOLLOW(val_assigment)   = { EOL }
FOLLOW(ret_value)       = { EOL }
FOLLOW(return_stat)     = { EOL }
FOLLOW(func_stat_list)   = { EOL, "}" }
FOLLOW(stat_list)        = { EOL, "}", EOF }
FOLLOW(type)            = { EOL , "," , ")", "=" }
FOLLOW(var_definition)  = { ":", "=" }
FOLLOW(param_list)      = { ")" }
FOLLOW(param_next)      = { ")" }
FOLLOW(param)           = { ")", "," }
FOLLOW(input_param)     = { "," , id, const }
FOLLOW(with_name)       = { "," , id, const }
FOLLOW(id_or_const)     = { "," , id, const }


FIRST(param)          = {id}
FIRST(param_list)     = {id}
FIRST(input_param)    = {id, const}
FIRST(id_or_const)    = {id, const}
FIRST(function)       = {func}
FIRST(return_type)    = {->}
FIRST(return_stat)    = {return}
FIRST(param_next)     = {","}
FIRST(input_param_next) = {","}
FIRST(with_name)      = {":"}
FIRST(var_assigment)  = {"=", ":"}
FIRST(val_assigment)  = {"="}
FIRST(var_definition) = {let, var}
FIRST(input_param_list) = {id, const}
FIRST(statement)      = {func,   let, var, id, expression, if, while, EOL}
FIRST(stat_list)      = {func,   let, var, id, expression, if, while, EOL}
FIRST(program)        = {func,   let, var, id, expression, if, while, EOL, EOF}
FIRST(func_stat)      = {return, let, var, id, expression, if, while, EOL}
FIRST(func_stat_list) = {return, let, var, id, expression, if, while, EOL}
FIRST(condition) = {expression, let}
FIRST(ret_value) = {expression}


PREDICT(1) = func, let, var, id, expression, if, while, EOL
PREDICT(2) = func
PREDICT(3) = ->
PREDICT(4) = "{"
PREDICT(5) = return, let, var, id, expression, if, while, EOL
PREDICT(6) = EOL, "}" 
PREDICT(7) = return
PREDICT(8) = let, var
PREDICT(9) = id
PREDICT(10) = expression
PREDICT(11) = if
PREDICT(12) = while
PREDICT(13) = EOL
PREDICT(14) = EOL
PREDICT(15) = expression
PREDICT(16) = let
PREDICT(17) = return
PREDICT(18) = EOL
PREDICT(19) = expression
PREDICT(20) = EOL
PREDICT(21) = ")"
PREDICT(22) = id
PREDICT(23) = ","
PREDICT(24) = ")"
PREDICT(25) = id
PREDICT(26) = func, let, var, id, expression, if, while, EOL
PREDICT(27) = EOL, "}", EOF
PREDICT(28) = func
PREDICT(29) = let, var
PREDICT(30) = id
PREDICT(31) = expression
PREDICT(32) = if
PREDICT(33) = while
PREDICT(34) = EOL
PREDICT(35) = EOL
PREDICT(36) = let
PREDICT(37) = var
PREDICT(38) = ":"
PREDICT(39) = "="
PREDICT(40) = "="
PREDICT(41) = EOL
PREDICT(42) = ")"
PREDICT(43) = id, const
PREDICT(44) = ","
PREDICT(45) = ")"
PREDICT(46) = const
PREDICT(47) = id
PREDICT(48) = "," , id, const
PREDICT(49) = ":"
PREDICT(50) = id
PREDICT(51) = const
